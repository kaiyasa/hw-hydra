

81
40 / 1  low
20 / 0
10 / 0
5  / 0
2  / 1
1  / 0
0  / 1
-  / 0  hi

150 
 75 / 0
 37 / 1
 18 / 1
  9 / 0
  4 / 1
  2 / 0
  1 / 0
  0 / 1    1001 0110



v*(2+8)

; r0 = value * 10
mov r0, value
asl r0
mov r1, r0
asl r1
asl r1
clc
add r0, r1
rts

; r0 = value * n
  mov r0, #0
  mov r1, value

- beq ++
  clc
  lsr r1
  bcc +
  add r0, r1
  clc
+ lsl r1
  jmp -
+ rts

; opcode
;   <verb> <reg_or_mem> <direct_or_indir> <args>
;   0000 00 ...
;      args so far
;         reg_select = 0-7 (3 bits)
;         shift_distance = 0-63 (6 bits)



